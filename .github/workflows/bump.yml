name: Bump version on push to master
# See Also:
#   https://commitizen-tools.github.io/commitizen/tutorials/github_actions/
#   https://github.com/commitizen-tools/commitizen-action#sample-workflow

on:
  push:
    branches:
      - master

jobs:
  bump-version:
    name: "Bump version and create changelog with commitizen"
    runs-on: ubuntu-latest

    # avoid re-triggering on bump commits
    # NOTE: keep in sync with tool.commitizen.bump_message in pyproject.toml!!!
    if: "!startsWith(github.event.head_commit.message, 'release:')"

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.CR_PAT }}"
          fetch-depth: 0

      - name: Show git config
        run: |
          git status
          git log --oneline -n3

      - name: Configuring git user and email
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install utils
        run: |
          python3 -m pip install \
            --user \
            commitizen==2.27.1 \
            poetry==1.2.0

      - name: "Bump: commit and tag"
        id: bump_commit
        run: |
          ./scripts/bump \
          && export INCOMING_TAG=`cz version --project` \
          && echo "INCOMING_TAG=${INCOMING_TAG}" >> "$GITHUB_ENV" \
          && echo "::set-output name=should_bump::yes" \
          || echo "::set-output name=should_bump::no"

      - name: "Bump: Push"
        if: ${{ steps.bump_commit.outputs.should_bump == 'yes'}}
        run: |
          export REMOTE_REPO="https://${{ github.actor }}:${{ secrets.CR_PAT }}@github.com/${{ github.repository }}.git" \
          && export CURRENT_BRANCH="$(git branch --show-current)" \
          && git pull "$REMOTE_REPO" "$CURRENT_BRANCH" \
          && git push "$REMOTE_REPO" "HEAD:${CURRENT_BRANCH}" --tags

      - name: Release
        if: ${{ steps.bump_commit.outputs.should_bump == 'yes'}}
        uses: softprops/action-gh-release@v1
        with:
          body_path: "incoming-changelog.md"
          tag_name: ${{ env.INCOMING_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
