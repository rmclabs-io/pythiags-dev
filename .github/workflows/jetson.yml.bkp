name: Jetson
# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron:  '*/15 * * * *'
on:
  push:
    branches:
    # - feature/*
  workflow_dispatch:

jobs:
 
  gst-check:
    runs-on: [self-hosted, xavier]
    container:
      image: ghcr.io/rmclabs-io/pythia-dev
      env:
        DISPLAY: :0
        DBUS_FATAL_WARNINGS: 0
      volumes:
        - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      options: --runtime nvidia
    steps:
      - name: small gst
        id: gstlaunch-test
        run: |
          gst-launch-1.0 \
            videotestsrc \
              num-buffers=100 \
            ! decodebin \
            ! nvvideoconvert \
            ! nveglglessink

  # runner:
  #   needs: orchestrator
  #   runs-on: [self-hosted, linux, ARM64, jetson, runner, docker]

  #   steps:

  #     - name: Python Version
  #       id: setup-pyenv
  #       run: |
  #         eval "$(pyenv init -)" \
  #         && pyenv local $PYTHON_VERSION \
  #         && echo "`pyenv prefix`/bin" >> $GITHUB_PATH
  #         echo "LANG=$LANG" >> $GITHUB_ENV
  #       env:
  #         PYTHON_VERSION: 3.6.9
  #         LANG: C.UTF-8  # only for 3.6, see https://github.com/python-poetry/poetry/issues/1427#issuecomment-537260307

  #     # This takes around 50 [sec]
  #     - uses: actions/checkout@v2
  #     - name: Install Aptitude requirements from dl
  #       id: aptitude-reqs-dl
  #       run: |
  #         DEBIAN_FRONTEND=noninteractive \
  #         sudo apt install -yq \
  #           `cat setup/aptitude.build.list | tr "\n" " "` 
  #           `cat setup/aptitude.run.list | tr "\n" " "`

  #     # This takes around 20 [sec]
  #     - name: Install pkg
  #       id: poetry-install
  #       run: |
  #         poetry config --local virtualenvs.create true
  #         poetry config --local virtualenvs.in-project true
  #         poetry install -vvv  -E ds -E cli

  #     # - name: Setup Debug Session
  #     #   uses: csexton/debugger-action@master

  #     - name: check
  #       id: check
  #       continue-on-error: true
  #       run: |
  #         poetry run pre-commit run --all-files

  #     - name: test
  #       id: test
  #       run: |
  #         poetry run pytest
