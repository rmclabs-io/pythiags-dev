name: Bump version on master push

on:
  push:
    branches:
      - master

jobs:
  bump-version:
    # keep this in sync with commitizen's "bump_message" tp avoid
    # re-triggering this workflow after commitizen bump command pushes
    if: "!startsWith(github.event.head_commit.message, 'release:')"
    runs-on: ubuntu-20.04
    name: "Bump version and create changelog with commitizen"
    steps:


      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Check out
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.PERSONAL_ACCESS_TOKEN }}'
          fetch-depth: 0

      - name: Configuring git user and email
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install deps
        run: |
          pip install \
            --user \
            commitizen==2.14.2 \
            poetry==1.1.4
          python3 -m poetry install -E dev

      - name: Bump commitizen(files-only) -> poetry -> commitizen(git, commit, tag)
        run: |
          python3 -m commitizen bump --yes --files-only \
            && export NEXT_TAG=`python3 -m commitizen version -p` \
            && git reset --hard \
            && python3 -m poetry version $NEXT_TAG \
            && python3 -m commitizen bump --yes

      - name: Run pytest
        run: |
          python3 -m poetry run pytest

      - name: Pushing to branch
        run: |
          export remote_repo="https://${{ github.actor }}:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git" \
          && git pull $remote_repo master \
          && git push "$remote_repo" HEAD:master --follow-tags --tags
  
      - name: Report Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./reports/coverage.xml
          flags: ${{ matrix.python-version }}
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Publish to pypi
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m poetry publish \
            --build \
            -u $PYPI_USERNAME \
            -p $PYPI_PASSWORD
