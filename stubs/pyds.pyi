from typing import Any
from typing import Callable
from typing import ClassVar
from typing import Dict
from typing import List
from typing import overload
from typing import Type

import numpy

_GRecMutex = Any

NVDSINFER_SEGMENTATION_META: NvDsMetaType

class NvDsMetaPool:
    element_size: int
    empty_list: GList
    full_list: GList
    max_elements_in_pool: int
    meta_type: NvDsMetaType
    num_empty_elements: int
    num_full_elements: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsMetaPool: ...
    @overload
    def cast(data) -> NvDsMetaPool: ...

class NvOSD_FontParams:
    font_color: NvOSD_ColorParams
    font_name: int
    font_size: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvOSD_FontParams: ...
    @overload
    def cast(data) -> Any: ...

class NvOSD_ColorParams:
    alpha: float
    blue: float
    green: float
    red: float
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvOSD_ColorParams: ...
    @overload
    def cast(data) -> Any: ...
    def set(
        self, red: float, green: float, blue: float, alpha: float
    ) -> None: ...

class NvBbox_Coords:
    height: float
    left: float
    top: float
    width: float
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvBbox_Coords: ...
    @overload
    def cast(data) -> Any: ...

capsule = Any

class NvDsMetaType:
    __members__: ClassVar[dict] = ...  # read-only
    NVDSINFER_SEGMENTATION_META: ClassVar[NvDsMetaType] = ...
    NVDSINFER_TENSOR_OUTPUT_META: ClassVar[NvDsMetaType] = ...
    NVDS_AUDIO_BATCH_META: ClassVar[NvDsMetaType] = ...
    NVDS_AUDIO_FRAME_META: ClassVar[NvDsMetaType] = ...
    NVDS_BATCH_META: ClassVar[NvDsMetaType] = ...
    NVDS_CLASSIFIER_META: ClassVar[NvDsMetaType] = ...
    NVDS_CROP_IMAGE_META: ClassVar[NvDsMetaType] = ...
    NVDS_DISPLAY_META: ClassVar[NvDsMetaType] = ...
    NVDS_EVENT_MSG_META: ClassVar[NvDsMetaType] = ...
    NVDS_FORCE32_META: ClassVar[NvDsMetaType] = ...
    NVDS_FRAME_META: ClassVar[NvDsMetaType] = ...
    NVDS_GST_CUSTOM_META: ClassVar[NvDsMetaType] = ...
    NVDS_INVALID_META: ClassVar[NvDsMetaType] = ...
    NVDS_LABEL_INFO_META: ClassVar[NvDsMetaType] = ...
    NVDS_LATENCY_MEASUREMENT_META: ClassVar[NvDsMetaType] = ...
    NVDS_OBJ_META: ClassVar[NvDsMetaType] = ...
    NVDS_OPTICAL_FLOW_META: ClassVar[NvDsMetaType] = ...
    NVDS_PAYLOAD_META: ClassVar[NvDsMetaType] = ...
    NVDS_RESERVED_META: ClassVar[NvDsMetaType] = ...
    NVDS_START_USER_META: ClassVar[NvDsMetaType] = ...
    NVDS_TRACKER_PAST_FRAME_META: ClassVar[NvDsMetaType] = ...
    NVDS_USER_META: ClassVar[NvDsMetaType] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, arg0: int) -> None: ...
    def __eq__(self, other) -> Any: ...
    def __getstate__(self) -> Any: ...
    def __hash__(self) -> Any: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other) -> Any: ...
    def __setstate__(self, state) -> Any: ...
    @property
    def name(self) -> str: ...

_NvDsBatchMeta = NvDsBatchMeta

class NvDsBatchMeta:
    base_meta: NvDsBaseMeta
    batch_user_meta_list: GList
    classifier_meta_pool: NvDsMetaPool
    display_meta_pool: NvDsMetaPool
    frame_meta_list: GList
    frame_meta_pool: NvDsMetaPool
    label_info_meta_pool: NvDsMetaPool
    max_frames_in_batch: int
    meta_mutex: _GRecMutex
    misc_batch_info: array
    num_frames_in_batch: int
    obj_meta_pool: NvDsMetaPool
    reserved: array
    user_meta_pool: NvDsMetaPool
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsBatchMeta: ...
    @overload
    def cast(data) -> Any: ...

class StringPointer:
    def __set__(self, obj, value: str) -> None: ...
    def __get__(self, obj, objtype=None) -> int: ...

class NvOSD_TextParams:
    display_text: StringPointer
    font_params: NvOSD_FontParams
    set_bg_clr: int
    text_bg_clr: NvOSD_ColorParams
    x_offset: int
    y_offset: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvOSD_TextParams: ...
    @overload
    def cast(data) -> Any: ...

class NvOSD_RectParams:
    bg_color: NvOSD_ColorParams
    border_color: NvOSD_ColorParams
    border_width: int
    color_id: int
    has_bg_color: int
    has_color_info: int
    height: float
    left: float
    reserved: int
    top: float
    width: float
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvOSD_RectParams: ...
    @overload
    def cast(data) -> Any: ...

array = numpy.ndarray

class NvOSD_MaskParams:
    height: int
    size: int
    threshold: float
    width: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvOSD_MaskParams: ...
    @overload
    def cast(data) -> Any: ...
    @property
    def data(self) -> array: ...

class NvDsComp_BboxInfo:
    org_bbox_coords: NvBbox_Coords
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsComp_BboxInfo: ...
    @overload
    def cast(data) -> Any: ...

class GList:
    data: capsule
    next: GList
    prev: GList
    def __init__(self) -> None: ...

class NvDsBaseMeta:
    batch_meta: _NvDsBatchMeta
    meta_type: NvDsMetaType
    uContext: capsule
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsBaseMeta: ...
    @overload
    def cast(data) -> Any: ...

class NvDsObjectMeta:
    base_meta: NvDsBaseMeta
    class_id: int
    classifier_meta_list: GList
    confidence: float
    detector_bbox_info: NvDsComp_BboxInfo
    mask_params: NvOSD_MaskParams
    misc_obj_info: array
    obj_label: str
    obj_user_meta_list: GList
    object_id: int
    parent: NvDsObjectMeta
    rect_params: NvOSD_RectParams
    reserved: array
    text_params: NvOSD_TextParams
    tracker_bbox_info: NvDsComp_BboxInfo
    tracker_confidence: float
    unique_component_id: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsObjectMeta: ...
    @overload
    def cast(data) -> Any: ...

class NvDsFrameMeta:
    bInferDone: int
    base_meta: NvDsBaseMeta
    batch_id: int
    buf_pts: int
    display_meta_list: GList
    frame_num: int
    frame_user_meta_list: GList
    misc_frame_info: array
    ntp_timestamp: int
    num_obj_meta: int
    num_surfaces_per_frame: int
    obj_meta_list: GList
    pad_index: int
    reserved: array
    source_frame_height: int
    source_frame_width: int
    source_id: int
    surface_index: int
    surface_type: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsFrameMeta: ...
    @overload
    def cast(data) -> Any: ...

def get_segmentation_masks(data: capsule) -> array: ...

class NvDsAnalyticsFrameMeta:
    objCnt: Dict[int, int]
    objInROIcnt: Dict[str, int]
    objLCCumCnt: Dict[str, int]
    objLCCurrCnt: Dict[str, int]
    ocStatus: Dict[str, bool]
    unique_id: int
    def __init__(self) -> None: ...
    def cast(self, *args, **kwargs) -> Any: ...

class NvDsLabelInfo:
    base_meta: NvDsBaseMeta
    label_id: int
    num_classes: int
    pResult_label: str
    result_class_id: int
    result_label: str
    result_prob: float
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsLabelInfo: ...
    @overload
    def cast(data) -> Any: ...

def gst_buffer_get_nvds_batch_meta(buffer: int) -> NvDsBatchMeta: ...

class NvDsUserMeta:
    base_meta: NvDsBaseMeta
    user_meta_data: capsule
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsUserMeta: ...
    @overload
    def cast(data) -> Any: ...

def nvds_get_user_meta_type(meta_descriptor: str) -> NvDsMetaType: ...

class NvDsClassifierMeta:
    base_meta: NvDsBaseMeta
    label_info_list: GList
    num_labels: int
    unique_component_id: int
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsClassifierMeta: ...
    @overload
    def cast(data) -> Any: ...

class NvDsAnalyticsObjInfo:
    dirStatus: str
    lcStatus: List[str]
    ocStatus: List[str]
    roiStatus: List[str]
    unique_id: int
    def __init__(self) -> None: ...
    def cast(self, *args, **kwargs) -> Any: ...

class NvDsInferSegmentationMeta:
    def __init__(self) -> None: ...
    @overload
    def cast(self) -> NvDsInferSegmentationMeta: ...
    @overload
    def cast(data) -> Any: ...
    @property
    def class_map(self) -> int: ...
    @property
    def class_probabilities_map(self) -> float: ...
    @property
    def classes(self) -> int: ...
    @property
    def height(self) -> int: ...
    @property
    def priv_data(self) -> capsule: ...
    @property
    def width(self) -> int: ...

def nvds_acquire_classifier_meta_from_pool(
    batch_meta: NvDsBatchMeta,
) -> NvDsClassifierMeta: ...
def nvds_acquire_label_info_meta_from_pool(
    batch_meta: NvDsBatchMeta,
) -> NvDsLabelInfo: ...
def nvds_add_label_info_meta_to_classifier(
    classifier_meta: NvDsClassifierMeta, label_info_meta: NvDsLabelInfo
) -> None: ...
def nvds_add_classifier_meta_to_object(
    obj_meta: NvDsObjectMeta, classifier_meta: NvDsClassifierMeta
) -> None: ...
def get_string(ptr: int) -> str: ...
